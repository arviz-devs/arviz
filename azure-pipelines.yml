# Azure Pipelines config for ArviZ
trigger:
- master

jobs:
- job: build
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python_36_Unit_Test:
        PYTHON_VERSION: 3.6
        PYSTAN_VERSION: "latest"
        PYRO_VERSION: "latest"
        EMCEE_VERSION: "latest"
        NAME: "UNIT"
      Python_36_Unit_Test_PyStan_3_Pyro_1.0.0_Emcee_2_tf_1:
        PYTHON_VERSION: 3.6
        PYSTAN_VERSION: "preview"
        PYRO_VERSION: 1.0.0
        PYTORCH_VERSION: 1.3.0
        EMCEE_VERSION: 2
        TF_VERSION: 1
        NAME: "UNIT"
      Python_35_Unit_Test:
        PYTHON_VERSION: 3.5
        PYSTAN_VERSION: "latest"
        PYRO_VERSION: "latest"
        EMCEE_VERSION: "latest"
        PYMC3_VERSION: "3.8"
        NAME: "UNIT"
      Python_37_Unit_Test:
        PYTHON_VERSION: 3.7
        PYSTAN_VERSION: "latest"
        PYRO_VERSION: "latest"
        EMCEE_VERSION: "latest"
        NAME: "UNIT"
      Python_36_Lint:
        PYTHON_VERSION: 3.6
        PYSTAN_VERSION: "latest"
        PYRO_VERSION: "latest"
        EMCEE_VERSION: "latest"
        NAME: "LINT"

  steps:
  - script: |
      docker pull conda/miniconda3
      docker --version
    displayName: 'Pull Docker Image'

  - script: |
      # Build docker image
      . ./scripts/container.sh --build

      # Print conda details
      docker run --rm arviz:latest bash -c "conda info -a"

      # Print conda environment details
      docker run --rm arviz:latest bash -c "conda list && pip freeze"
    displayName: 'Build Docker Container'

  - script: |
      if [[ $NAME == UNIT ]];
      then docker run -t  --mount type=bind,source="$(pwd)",target=/opt/arviz --name arviz_test arviz:latest bash -c \
      "NUMBA_DISABLE_JIT=1 pytest -v arviz/tests/ --junitxml=junit/test-results.xml --cov=arviz/ --cov-report=xml --cov-report=html --durations=0";
        fi
    displayName: 'Test ArviZ'

  - script: |
      if [[ $NAME == LINT ]];
      then docker run -t arviz:latest bash -c "./scripts/lint.sh";
        fi

      if [ $? -ne 0 ]; then
        exit 1
        fi

      # Tests saving plots and deleting files
      if [[ $NAME == LINT ]];
      then docker run  -t --mount type=bind,source="$(pwd)",target=/opt/arviz --name arviz_test arviz:latest bash -c \
      "mkdir -p test_images/new_folder && pytest -v arviz/tests/ --save -k plot_khat --junitxml=junit/test-results.xml --cov=arviz/ --cov-report=xml --cov-report=html --durations=0";
        fi

    displayName: 'Lint ArviZ'

  - script: |
      if [[ $NAME == LINT || $NAME == UNIT ]]; then
      sed -i '6s/\/opt\/arviz/\/home\/vsts\/work\/1\/s/' coverage.xml;
       fi
    displayName: 'Coverage path adjustment'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
