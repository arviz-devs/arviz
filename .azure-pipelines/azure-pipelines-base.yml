jobs:
- job: BaseTests
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    - name: NUMBA_DISABLE_JIT
      value: 1
  timeoutInMinutes: 360
  strategy:
    matrix:
      Python_312_optionals:
        python.version: "3.12"
        Nightlies: false
        OptionalRequirements: true
        name: "Python 3.12"
      Python_312:
        python.version: "3.12"
        Nightlies: false
        OptionalRequirements: false
        name: "Python 3.12"
      Python_311_optionals:
        python.version: "3.11"
        Nightlies: false
        OptionalRequirements: true
        name: "Python 3.11"
      Python_311_preview:
        python.version: "3.11"
        Nightlies: true
        OptionalRequirements: false
        name: "Python 3.11"
      Python_310_optionals:
        python.version: "3.10"
        Nightlies: false
        OptionalRequirements: true
        name: "Python 3.10"


  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      sudo apt-get update
      sudo apt-get install -y ffmpeg
    displayName: 'Install external libraries'

  - script: |
      ls -ahl
      env
      pwd
      gcc --version
      python --version
    displayName: 'Debug information'

  - script: |
      python -m pip install --upgrade pip
      python -m pip install wheel
      python -m pip install --no-cache-dir -r requirements.txt
      python -m pip install --no-cache-dir -r requirements-dev.txt
      python -m pip install pytest-azurepipelines
    displayName: 'Install base requirements'

  - script: |
      python -m pip install --no-cache-dir --pre -r requirements-optional.txt
    condition: and(succeeded(), eq(variables.OptionalRequirements, true))
    displayName: 'Install optional requirements'

  - script: |
      python -m pip install --no-cache-dir --upgrade --pre -r requirements.txt
      python -m pip install --no-cache-dir --force-reinstall --no-deps --pre -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple contourpy h5py matplotlib numpy pandas scipy xarray
    condition: and(succeeded(), eq(variables.Nightlies, true))
    displayName: 'Update with nightlies'

  - script: |
      python -m pip install .
    displayName: 'Install ArviZ package'

  - script: |
      python -m pip freeze
    displayName: 'Print packages'

  - script: |
      ARVIZ_REQUIRE_ALL_DEPS=TRUE python -m pytest arviz/tests/base_tests --cov arviz --cov-report=xml
    condition: and(succeeded(), eq(variables.OptionalRequirements, true))
    displayName: 'pytest (require all dependencies)'

  - script: |
      python -m pytest arviz/tests/base_tests --cov arviz --cov-report=xml
    condition: and(succeeded(), eq(variables.OptionalRequirements, false))
    displayName: 'pytest (skip if dependency missing)'

  - script: |
      ls -ahl
      env
    displayName: 'Debug information 2'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '$(System.DefaultWorkingDirectory)/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'
    displayName: 'Publish Test Results'

  - script: |
      curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step
      curl -Os https://uploader.codecov.io/latest/linux/codecov
      curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
      curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
      gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
      shasum -a 256 -c codecov.SHA256SUM
      chmod +x codecov
      ./codecov -n "$(NAME)"
    displayName: 'upload coverage'
