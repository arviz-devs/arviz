jobs:
- job: BuildDocs
  dependsOn:
    - BaseTests
  condition: and(succeeded(), or(eq(variables['Build.SourceBranchName'], 'main'), eq(variables['Build.Reason'], 'PullRequest')))
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    - name: NUMBA_DISABLE_JIT
      value: 1
  timeoutInMinutes: 360
  strategy:
    matrix:
      Python_39:
        python.version: "3.9"
        name: "Python 3.9 - docs"

  steps:
  - script: |
      PRTitle=$(curl -s https://api.github.com/repos/arviz-devs/arviz/pulls/${PULLREQUESTNUMBER} | grep title | cut -d'"' -f4)
      echo "##vso[task.setvariable variable=PRTitle]${PRTitle}"
      echo "PR title: ${PRTitle}"
    env:
      PULLREQUESTNUMBER: $(System.PullRequest.PullRequestNumber)
    displayName: 'Read PR title'

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      ls -ahl
      env
      pwd
      gcc --version
      python --version
    displayName: 'Debug information'

  - script: |
      sudo apt-get update
      sudo apt-get install -y pandoc
    displayName: 'Install external libraries'

  - script: |
      python -m pip install --upgrade pip
      python -m pip install wheel
      python -m pip install --no-cache-dir -r requirements.txt
      python -m pip install --no-cache-dir -r requirements-docs.txt
      python -m pip install .
    displayName: 'Install requirements'

  - script: |
      python -m pip freeze
    displayName: 'Print packages'

  - script: |
      python -msphinx -M clean doc/source doc/build
      sphinx-build doc/source doc/build -b html
    displayName: 'Build docs'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'doc/build'
      artifactName: 'arviz_doc_build'
    condition: or(eq(variables['Build.SourceBranchName'], 'main'), or(contains(variables['PRTitle'], '[doc]'), contains(variables['PRTitle'], '[docs]'), contains(variables['PRTitle'], '[viz]'), contains(variables['PRTitle'], '[plot]')))
    displayName: 'Upload docs'

  - script: |
      ls -ahl
      ls -ahl doc
      env
    displayName: 'Debug information 2'

  - script: |
      ghp-import -pfnr https://$(GH_USER):$(GH_TOKEN)@github.com/${BUILD_REPOSITORY_NAME}.git doc/build
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    displayName: 'Deploy docs'
